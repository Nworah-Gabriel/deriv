"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.startDisplayContext = startDisplayContext;
var browser_core_1 = require("@datadog/browser-core");
var viewportObservable_1 = require("../../browser/viewportObservable");
function startDisplayContext(configuration) {
    var viewport;
    var animationFrameId;
    if ((0, browser_core_1.isExperimentalFeatureEnabled)(browser_core_1.ExperimentalFeature.DELAY_VIEWPORT_COLLECTION)) {
        // Use requestAnimationFrame to delay the calculation of viewport dimensions until after SDK initialization, preventing long tasks.
        animationFrameId = requestAnimationFrame(function () {
            viewport = (0, viewportObservable_1.getViewportDimension)();
        });
    }
    else {
        viewport = (0, viewportObservable_1.getViewportDimension)();
    }
    var unsubscribeViewport = (0, viewportObservable_1.initViewportObservable)(configuration).subscribe(function (viewportDimension) {
        viewport = viewportDimension;
    }).unsubscribe;
    return {
        get: function () { return (viewport ? { viewport: viewport } : undefined); },
        stop: function () {
            unsubscribeViewport();
            if (animationFrameId) {
                cancelAnimationFrame(animationFrameId);
            }
        },
    };
}
//# sourceMappingURL=displayContext.js.map